[
  {
    "name": "boolean",
    "allDeclaredMethods": true
  },
  {
    "name": "boolean[]"
  },
  {
    "name": "byte[]"
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.Appender"
  },
  {
    "name": "char",
    "allDeclaredMethods": true
  },
  {
    "name": "char[]"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonIgnore",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.SerializationFeature",
    "allDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.Deserializers[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.Serializers[]"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.Bootstrap",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allDeclaredClasses": true,
    "methods": [
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.Bootstrap$$EnhancerBySpringCGLIB$$d768fd1",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.Bootstrap$$EnhancerBySpringCGLIB$$d768fd1$$FastClassBySpringCGLIB$$78409d9b",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.Bootstrap$$FastClassBySpringCGLIB$$23574c36",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.TestController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.CactiConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.CactiConfiguration$$EnhancerBySpringCGLIB$$1b1c30a3",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ]
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.api.Form"
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.controller.FormRestController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.CactusHistoryEntryModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.CactusModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.CactusModel$Acquisition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.CactusModel$State",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.CareGroupModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.FormModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.GenusModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.model.SpecieModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.CactusHistoryRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.CactusRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.CareGroupRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.FormRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.GenusRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.repository.SpecieRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.service.FormService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.service.GenusService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.cacti.service.SpecieService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dvb.controller.DvbController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dvb.service.DvbService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.controller.PollenController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.controller.WeatherController",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.dto.Polle",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.dto.PollenData",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.dto.PollenRegion",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.service.BrightSkyService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.service.DwdService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.github.marcelcoding.luna.dwd.service.PollenService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.el.ExpressionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy74",
    "methods": [
      {
        "name": "addNamedEntityGraph",
        "parameterTypes": [
          "java.lang.String",
          "javax.persistence.EntityGraph"
        ]
      },
      {
        "name": "addNamedQuery",
        "parameterTypes": [
          "java.lang.String",
          "javax.persistence.Query"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "containsFetchProfileDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": []
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "javax.persistence.SynchronizationType"
        ]
      },
      {
        "name": "createEntityManager",
        "parameterTypes": [
          "javax.persistence.SynchronizationType",
          "java.util.Map"
        ]
      },
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "findEntityGraphsByType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getAllClassMetadata",
        "parameterTypes": []
      },
      {
        "name": "getAllCollectionMetadata",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getClassMetadata",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassMetadata",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCollectionMetadata",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCriteriaBuilder",
        "parameterTypes": []
      },
      {
        "name": "getCurrentSession",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDefinedFilterNames",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerFactoryName",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityTypeByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilterDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getMetamodel",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitUtil",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getReference",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactory",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactoryOptions",
        "parameterTypes": []
      },
      {
        "name": "getStatistics",
        "parameterTypes": []
      },
      {
        "name": "getTypeHelper",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isOpen",
        "parameterTypes": []
      },
      {
        "name": "openSession",
        "parameterTypes": []
      },
      {
        "name": "openStatelessSession",
        "parameterTypes": []
      },
      {
        "name": "openStatelessSession",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "withOptions",
        "parameterTypes": []
      },
      {
        "name": "withStatelessOptions",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.proxy.$Proxy79",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.sun.xml.internal.stream.events.XMLEventFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariConfigMXBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "com.zaxxer.hikari.pool.HikariProxyConnection",
    "methods": [
      {
        "name": "getSchema",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "double[]"
  },
  {
    "name": "float[]"
  },
  {
    "name": "int[]"
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.embedded.EmbeddedChannel$2"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToByteEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageCodec",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.compression.JdkZlibEncoder",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentDecompressor"
  },
  {
    "name": "io.netty.handler.codec.http.HttpContentEncoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name": "io.netty.handler.codec.http2.Http2ConnectionHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http2.Http2FrameCodec",
    "methods": [
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http2.Http2MultiplexHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http2.Http2StreamFrameToHttpObjectCodec"
  },
  {
    "name": "io.netty.handler.ssl.SslHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.IdleStateHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.timeout.ReadTimeoutHandler"
  },
  {
    "name": "io.netty.internal.tcnative.SSLContext"
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$1"
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$3"
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.NativeLibraryUtil",
    "methods": [
      {
        "name": "loadLibrary",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.beans.PropertyVetoException"
  },
  {
    "name": "java.io.Closeable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.ObjectInputStream",
    "allPublicMethods": true
  },
  {
    "name": "java.io.Serializable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.AbstractStringBuilder"
  },
  {
    "name": "java.lang.AutoCloseable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.CharSequence",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.CharSequence[]"
  },
  {
    "name": "java.lang.Class",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getModule",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.Class[]"
  },
  {
    "name": "java.lang.Comparable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Enum",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Iterable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.Module",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "isNamed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Number",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Object[]"
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.Short",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.String",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.StringBuffer"
  },
  {
    "name": "java.lang.StringBuilder"
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.annotation.Documented",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Repeatable",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Target",
    "allDeclaredMethods": true
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "allPublicMethods": true
  },
  {
    "name": "java.lang.reflect.Proxy",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getInvocationHandler",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getProxyClass",
        "parameterTypes": [
          "java.lang.ClassLoader",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "isProxyClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newProxyInstance",
        "parameterTypes": [
          "java.lang.ClassLoader",
          "java.lang.Class[]",
          "java.lang.reflect.InvocationHandler"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "allPublicMethods": true
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "methods": [
      {
        "name": "unaligned",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.charset.Charset"
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Statement[]"
  },
  {
    "name": "java.sql.Wrapper",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.time.OffsetDateTime"
  },
  {
    "name": "java.time.temporal.TemporalAccessor"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.EventListener",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.HashMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.HashSet",
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.util.Locale"
  },
  {
    "name": "java.util.Properties"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.ServiceLoader",
    "methods": [
      {
        "name": "stream",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.ServiceLoader$Provider",
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.UUID"
  },
  {
    "name": "java.util.concurrent.Executor"
  },
  {
    "name": "java.util.concurrent.Flow$Publisher"
  },
  {
    "name": "java.util.function.Supplier",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.util.logging.LogManager"
  },
  {
    "name": "javax.annotation.ManagedBean"
  },
  {
    "name": "javax.annotation.Resource"
  },
  {
    "name": "javax.naming.Referenceable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.net.ssl.SSLContext",
    "fields": [
      {
        "name": "contextSpi",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "javax.persistence.Column",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Embeddable",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Embedded",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Entity",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.EntityManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.EntityManagerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.persistence.ForeignKey",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.GeneratedValue",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Id",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Index",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.JoinColumn",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.ManyToOne",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.MappedSuperclass",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.OneToMany",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Persistence",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUtil",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.persistence.PersistenceContext",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.PersistenceProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Table",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Transient",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.UniqueConstraint",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.persistence.Version",
    "allDeclaredMethods": true
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.sql.CommonDataSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.sql.XADataSource"
  },
  {
    "name": "javax.transaction.Transaction"
  },
  {
    "name": "javax.transaction.TransactionManager"
  },
  {
    "name": "javax.transaction.Transactional"
  },
  {
    "name": "javax.validation.ConstraintViolation"
  },
  {
    "name": "javax.validation.Validator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.ValidatorFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "javax.validation.bootstrap.GenericBootstrap"
  },
  {
    "name": "javax.validation.executable.ExecutableValidator"
  },
  {
    "name": "javax.xml.bind.Binder"
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "long[]"
  },
  {
    "name": "net.getnova.framework.api.data.response.ApiError",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.api.data.response.ApiError[]"
  },
  {
    "name": "net.getnova.framework.api.data.response.CustomApiError",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.getnova.framework.api.endpoint.DeleteEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.api.endpoint.GetEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.api.endpoint.PostEndpoint",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.api.rest.ErrorRestApiResponse",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.getnova.framework.api.rest.annotation.RestApiController",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.api.ws.annotation.WebsocketApiController",
    "allDeclaredMethods": true
  },
  {
    "name": "net.getnova.framework.jpa.model.TableModel",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.getnova.framework.jpa.model.TableModelAutoId",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "net.getnova.framework.web.server.http.HttpServer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "net.getnova.framework.web.server.http.route.HttpRoute",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.log4j.LogManager"
  },
  {
    "name": "org.apache.logging.log4j.Logger"
  },
  {
    "name": "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.message.ReusableMessageFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.log4j.spi.AbstractLogger"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.apache.logging.slf4j.MDCContextMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JLoggerContextFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.aspectj.weaver.Advice"
  },
  {
    "name": "org.hibernate.Session",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.SessionFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.SharedSessionContract",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.annotations.common.reflection.ReflectionManager",
    "methods": [
      {
        "name": "reset",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.reflection.java.JavaReflectionManager",
    "methods": [
      {
        "name": "getXAnnotatedElement",
        "parameterTypes": [
          "java.lang.Package"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.reflection.java.JavaXMember",
    "methods": [
      {
        "name": "getMember",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.annotations.common.util.impl.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.boot.archive.scan.internal.DisabledScanner",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.boot.internal.DefaultSessionFactoryBuilderService",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.internal.none.BytecodeProviderImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.bytecode.internal.none.NoProxyFactoryFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.DisabledCaching",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cache.internal.NoCachingRegionFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.cfg.beanvalidation.TypeSafeActivator",
    "methods": [
      {
        "name": "activate",
        "parameterTypes": [
          "org.hibernate.cfg.beanvalidation.ActivationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.dialect.PostgreSQL10Dialect",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.CompositeOwner",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.CompositeTracker",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.ExtendedSelfDirtinessTracker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.Managed",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.ManagedComposite",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.engine.spi.ManagedEntity",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.ManagedMappedSuperclass",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.PersistentAttributeInterceptable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.SelfDirtinessTracker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.hibernate.engine.spi.SessionImplementor"
  },
  {
    "name": "org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.event.service.internal.EventListenerRegistryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.event.spi.AutoFlushEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.DeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.DirtyCheckEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.EventType",
    "allDeclaredFields": true
  },
  {
    "name": "org.hibernate.event.spi.EvictEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.FlushEntityEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.FlushEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.InitializeCollectionEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.LoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.LockEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.MergeEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PersistEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostDeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostInsertEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostLoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PostUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreDeleteEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreInsertEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreLoadEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.PreUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.RefreshEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.ReplicateEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
  },
  {
    "name": "org.hibernate.event.spi.SaveOrUpdateEventListener[]"
  },
  {
    "name": "org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.hql.internal.ast.HqlToken",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.DotNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.FromElement",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.IdentNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.Node",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.OrderByClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.QueryNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SelectClause",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlFragment",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.hql.internal.ast.tree.SqlNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.Assigned",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.UUIDGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.internal.CoreMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.jmx.internal.DisabledJmxServiceImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManager",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.jpa.HibernateEntityManagerFactory",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.metamodel.internal.MetamodelImpl"
  },
  {
    "name": "org.hibernate.persister.collection.OneToManyPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Collection",
          "org.hibernate.cache.spi.access.CollectionDataAccess",
          "org.hibernate.persister.spi.PersisterCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.PersistentClass",
          "org.hibernate.cache.spi.access.EntityDataAccess",
          "org.hibernate.cache.spi.access.NaturalIdDataAccess",
          "org.hibernate.persister.spi.PersisterCreationContext"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.persister.internal.PersisterFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.persister.internal.StandardPersisterClassResolver",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.proxy.HibernateProxy"
  },
  {
    "name": "org.hibernate.query.QueryProducer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.beans.container.spi.BeanContainer"
  },
  {
    "name": "org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.stat.internal.StatisticsImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.tool.schema.internal.HibernateSchemaManagementTool",
    "allPublicMethods": true
  },
  {
    "name": "org.hibernate.tuple.component.PojoComponentTuplizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.mapping.Component"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.tuple.entity.PojoEntityTuplizer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.hibernate.tuple.entity.EntityMetamodel",
          "org.hibernate.mapping.PersistentClass"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
    "methods": [
      {
        "name": "externalClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.engine.ConfigurationImpl"
  },
  {
    "name": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Log_$logger",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.jboss.logging.Logger"
        ]
      }
    ]
  },
  {
    "name": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
    "fields": [
      {
        "name": "INSTANCE"
      }
    ]
  },
  {
    "name": "org.postgresql.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.postgresql.PGProperty",
    "fields": [
      {
        "name": "ALLOW_ENCODING_CHANGES"
      },
      {
        "name": "APPLICATION_NAME"
      },
      {
        "name": "ASSUME_MIN_SERVER_VERSION"
      },
      {
        "name": "AUTOSAVE"
      },
      {
        "name": "BINARY_TRANSFER"
      },
      {
        "name": "BINARY_TRANSFER_DISABLE"
      },
      {
        "name": "BINARY_TRANSFER_ENABLE"
      },
      {
        "name": "CANCEL_SIGNAL_TIMEOUT"
      },
      {
        "name": "CLEANUP_SAVEPOINTS"
      },
      {
        "name": "CONNECT_TIMEOUT"
      },
      {
        "name": "CURRENT_SCHEMA"
      },
      {
        "name": "DATABASE_METADATA_CACHE_FIELDS"
      },
      {
        "name": "DATABASE_METADATA_CACHE_FIELDS_MIB"
      },
      {
        "name": "DEFAULT_ROW_FETCH_SIZE"
      },
      {
        "name": "DISABLE_COLUMN_SANITISER"
      },
      {
        "name": "ESCAPE_SYNTAX_CALL_MODE"
      },
      {
        "name": "GSS_ENC_MODE"
      },
      {
        "name": "GSS_LIB"
      },
      {
        "name": "HIDE_UNPRIVILEGED_OBJECTS"
      },
      {
        "name": "HOST_RECHECK_SECONDS"
      },
      {
        "name": "JAAS_APPLICATION_NAME"
      },
      {
        "name": "JAAS_LOGIN"
      },
      {
        "name": "KERBEROS_SERVER_NAME"
      },
      {
        "name": "LOAD_BALANCE_HOSTS"
      },
      {
        "name": "LOGGER_FILE"
      },
      {
        "name": "LOGGER_LEVEL"
      },
      {
        "name": "LOGIN_TIMEOUT"
      },
      {
        "name": "LOG_SERVER_ERROR_DETAIL"
      },
      {
        "name": "LOG_UNCLOSED_CONNECTIONS"
      },
      {
        "name": "MAX_RESULT_BUFFER"
      },
      {
        "name": "OPTIONS"
      },
      {
        "name": "PASSWORD"
      },
      {
        "name": "PG_DBNAME"
      },
      {
        "name": "PG_HOST"
      },
      {
        "name": "PG_PORT"
      },
      {
        "name": "PREFER_QUERY_MODE"
      },
      {
        "name": "PREPARED_STATEMENT_CACHE_QUERIES"
      },
      {
        "name": "PREPARED_STATEMENT_CACHE_SIZE_MIB"
      },
      {
        "name": "PREPARE_THRESHOLD"
      },
      {
        "name": "PROTOCOL_VERSION"
      },
      {
        "name": "READ_ONLY"
      },
      {
        "name": "READ_ONLY_MODE"
      },
      {
        "name": "RECEIVE_BUFFER_SIZE"
      },
      {
        "name": "REPLICATION"
      },
      {
        "name": "REWRITE_BATCHED_INSERTS"
      },
      {
        "name": "SEND_BUFFER_SIZE"
      },
      {
        "name": "SOCKET_FACTORY"
      },
      {
        "name": "SOCKET_FACTORY_ARG"
      },
      {
        "name": "SOCKET_TIMEOUT"
      },
      {
        "name": "SSL"
      },
      {
        "name": "SSL_CERT"
      },
      {
        "name": "SSL_FACTORY"
      },
      {
        "name": "SSL_FACTORY_ARG"
      },
      {
        "name": "SSL_HOSTNAME_VERIFIER"
      },
      {
        "name": "SSL_KEY"
      },
      {
        "name": "SSL_MODE"
      },
      {
        "name": "SSL_PASSWORD"
      },
      {
        "name": "SSL_PASSWORD_CALLBACK"
      },
      {
        "name": "SSL_ROOT_CERT"
      },
      {
        "name": "SSPI_SERVICE_CLASS"
      },
      {
        "name": "STRING_TYPE"
      },
      {
        "name": "TARGET_SERVER_TYPE"
      },
      {
        "name": "TCP_KEEP_ALIVE"
      },
      {
        "name": "UNKNOWN_LENGTH"
      },
      {
        "name": "USER"
      },
      {
        "name": "USE_SPNEGO"
      },
      {
        "name": "XML_FACTORY_FACTORY"
      }
    ]
  },
  {
    "name": "org.postgresql.ds.PGSimpleDataSource"
  },
  {
    "name": "org.reactivestreams.Publisher",
    "allDeclaredMethods": true
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger"
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.SpringProxy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "setBeforeExistingAdvisors",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.scope.ScopedObject"
  },
  {
    "name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdvice",
        "parameterTypes": []
      },
      {
        "name": "getAdviceBeanName",
        "parameterTypes": []
      },
      {
        "name": "setAdvice",
        "parameterTypes": [
          "org.aopalliance.aop.Advice"
        ]
      },
      {
        "name": "setAdviceBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isPerInstance",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aot.StaticSpringFactories"
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.ObjectProvider"
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.AbstractFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setSingleton",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.PropertiesFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.cache.CacheCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnJndiCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$OracleUcp"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$531/0x00000008402d0c40",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getDataSourcePoolMetadata",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$DataSourceInitializationCompletionListener",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$Registrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "entityManagerFactory",
        "parameterTypes": [
          "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder"
        ]
      },
      {
        "name": "entityManagerFactoryBuilder",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "jpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.orm.jpa.JpaProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "customize",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.AtomikosJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.BitronixJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getLastChangeEvent",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getState",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.boot.availability.AvailabilityState"
        ]
      },
      {
        "name": "onApplicationEvent",
        "parameterTypes": [
          "org.springframework.context.ApplicationEvent"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.TypeExcludeFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation[]"
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.convert.DurationUnit",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.info.BuildProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.info.InfoProperties",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "toPropertySource",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.jdbc.XADataSourceWrapper"
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$485/0x000000084029dc40",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder"
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cache.Cache"
  },
  {
    "name": "org.springframework.cache.CacheManager"
  },
  {
    "name": "org.springframework.cache.interceptor.CacheAspectSupport"
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.AutoProxyRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.EnableAspectJAutoProxy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "onClose",
        "parameterTypes": []
      },
      {
        "name": "onRefresh",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
  },
  {
    "name": "org.springframework.context.weaving.LoadTimeWeaverAware",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AnnotationAttributes[]"
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.DefaultConversionService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]"
  },
  {
    "name": "org.springframework.core.io.Resource",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.Resource[]",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.annotation.QueryAnnotation",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.domain.Sort"
  },
  {
    "name": "org.springframework.data.domain.Sort$Direction",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.mapping.JpaMetamodelMappingContext",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "findPersistentPropertyPaths",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "hasPersistentEntityFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaContext",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.JpaSpecificationExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.Query",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.EnableJpaRepositories",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.query.JpaQueryMethodFactory"
  },
  {
    "name": "org.springframework.data.jpa.repository.support.CrudMethodMetadata",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.DefaultJpaContext",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaEvaluationContextExtension",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getExtensionId",
        "parameterTypes": []
      },
      {
        "name": "getRootObject",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.JpaRepositoryImplementation",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.jpa.repository.support.SimpleJpaRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.jpa.util.JpaMetamodelCacheCleanup",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.mapping.context.AbstractMappingContext",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getManagedTypes",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntities",
        "parameterTypes": []
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.mapping.PersistentProperty"
        ]
      },
      {
        "name": "getPersistentEntity",
        "parameterTypes": [
          "org.springframework.data.util.TypeInformation"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getPersistentPropertyPath",
        "parameterTypes": [
          "org.springframework.data.mapping.PropertyPath"
        ]
      },
      {
        "name": "initialize",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      },
      {
        "name": "setInitialEntitySet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSimpleTypeHolder",
        "parameterTypes": [
          "org.springframework.data.mapping.model.SimpleTypeHolder"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.CrudRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.PagingAndSortingRepository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "empty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.EvaluationContextExtension",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.spel.spi.ExtensionIdAware",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.Streamable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.AbstractHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": []
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": []
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setSupportedMediaTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.http.MediaType",
          "org.springframework.http.HttpOutputMessage"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canRead",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "canWrite",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.http.MediaType"
        ]
      },
      {
        "name": "getObjectMapper",
        "parameterTypes": []
      },
      {
        "name": "getObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getSupportedMediaTypes",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "java.lang.reflect.Type",
          "java.lang.Class",
          "org.springframework.http.HttpInputMessage"
        ]
      },
      {
        "name": "registerObjectMappersForType",
        "parameterTypes": [
          "java.lang.Class",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setObjectMapper",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      },
      {
        "name": "setPrettyPrint",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int",
          "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List",
          "int[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.BatchPreparedStatementSetter"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "call",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "java.util.List"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.CallableStatementCreator",
          "org.springframework.jdbc.core.CallableStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.ConnectionCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.jdbc.core.StatementCallback"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementSetter"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object[]",
          "int[]"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "org.springframework.jdbc.core.PreparedStatementCreator",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map[]"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource[]"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.PreparedStatementCallback"
        ]
      },
      {
        "name": "getJdbcOperations",
        "parameterTypes": []
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.ResultSetExtractor"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowCallbackHandler"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForList",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForMap",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "java.lang.Class"
        ]
      },
      {
        "name": "queryForObject",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "queryForRowSet",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "queryForStream",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.core.RowMapper"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder"
        ]
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.jdbc.core.namedparam.SqlParameterSource",
          "org.springframework.jdbc.support.KeyHolder",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.DelegatingDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource"
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
  },
  {
    "name": "org.springframework.jdbc.support.JdbcAccessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "isLazyInit",
        "parameterTypes": []
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDatabaseProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionTranslator",
        "parameterTypes": [
          "org.springframework.jdbc.support.SQLExceptionTranslator"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jndi.JndiObjectFactoryBean"
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.nativex.NativeListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "createNativeEntityManager",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBeanClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getBootstrapExecutor",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaVendorAdapter",
        "parameterTypes": []
      },
      {
        "name": "getNativeEntityManagerFactory",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "getObjectType",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "isSingleton",
        "parameterTypes": []
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBootstrapExecutor",
        "parameterTypes": [
          "org.springframework.core.task.AsyncTaskExecutor"
        ]
      },
      {
        "name": "setEntityManagerFactoryInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setEntityManagerInitializer",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "setEntityManagerInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setJpaDialect",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaDialect"
        ]
      },
      {
        "name": "setJpaProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setJpaPropertyMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setJpaVendorAdapter",
        "parameterTypes": [
          "org.springframework.orm.jpa.JpaVendorAdapter"
        ]
      },
      {
        "name": "setPersistenceProvider",
        "parameterTypes": [
          "javax.persistence.spi.PersistenceProvider"
        ]
      },
      {
        "name": "setPersistenceProviderClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "translateExceptionIfPossible",
        "parameterTypes": [
          "java.lang.RuntimeException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerFactoryInfo",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.EntityManagerProxy",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaTransactionManager",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.JpaVendorAdapter",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitInfo",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceUnitName",
        "parameterTypes": []
      },
      {
        "name": "setPersistenceUnitName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.SharedEntityManagerCreator",
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessEntityManager",
        "parameterTypes": [
          "javax.persistence.EntityManager"
        ]
      },
      {
        "name": "postProcessEntityManagerFactory",
        "parameterTypes": [
          "javax.persistence.EntityManagerFactory"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "org.springframework.orm.jpa.vendor.Database"
        ]
      },
      {
        "name": "setDatabasePlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenerateDdl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShowSql",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getEntityManagerFactoryInterface",
        "parameterTypes": []
      },
      {
        "name": "getEntityManagerInterface",
        "parameterTypes": []
      },
      {
        "name": "getJpaDialect",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": []
      },
      {
        "name": "getJpaPropertyMap",
        "parameterTypes": [
          "javax.persistence.spi.PersistenceUnitInfo"
        ]
      },
      {
        "name": "getPersistenceProvider",
        "parameterTypes": []
      },
      {
        "name": "getPersistenceProviderRootPackage",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
  },
  {
    "name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Repository",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Service",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.ReactiveTransactionManager"
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "allPublicFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager"
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "isCandidateClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.EnableTransactionManagement",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.transaction.annotation.Transactional",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getTransactionAttribute",
        "parameterTypes": [
          "java.lang.reflect.Method",
          "java.lang.Class"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAspectSupport",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "currentTransactionStatus",
        "parameterTypes": []
      },
      {
        "name": "getTransactionAttributeSource",
        "parameterTypes": []
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "setTransactionAttributeSource",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      },
      {
        "name": "setTransactionAttributeSources",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource[]"
        ]
      },
      {
        "name": "setTransactionAttributes",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "org.springframework.transaction.TransactionManager"
        ]
      },
      {
        "name": "setTransactionManagerBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.jta.JtaTransactionManager"
  },
  {
    "name": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
    "allDeclaredFields": true,
    "allPublicFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "commit",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTransaction",
        "parameterTypes": [
          "org.springframework.transaction.TransactionDefinition"
        ]
      },
      {
        "name": "getTransactionSynchronization",
        "parameterTypes": []
      },
      {
        "name": "isFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": []
      },
      {
        "name": "isGlobalRollbackOnParticipationFailure",
        "parameterTypes": []
      },
      {
        "name": "isNestedTransactionAllowed",
        "parameterTypes": []
      },
      {
        "name": "isRollbackOnCommitFailure",
        "parameterTypes": []
      },
      {
        "name": "isValidateExistingTransaction",
        "parameterTypes": []
      },
      {
        "name": "rollback",
        "parameterTypes": [
          "org.springframework.transaction.TransactionStatus"
        ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setFailEarlyOnGlobalRollbackOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGlobalRollbackOnParticipationFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNestedTransactionAllowed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTransactionSynchronization",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTransactionSynchronizationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidateExistingTransaction",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.DefaultTransactionDefinition",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "getIsolationLevel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropagationBehavior",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "setIsolationLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIsolationLevelName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropagationBehavior",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPropagationBehaviorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "execute",
        "parameterTypes": [
          "org.springframework.transaction.support.TransactionCallback"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
  },
  {
    "name": "org.springframework.validation.SmartValidator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getConstraintValidatorFactory",
        "parameterTypes": []
      },
      {
        "name": "getMessageInterpolator",
        "parameterTypes": []
      },
      {
        "name": "getParameterNameProvider",
        "parameterTypes": []
      },
      {
        "name": "getTraversableResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "usingContext",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setValidatedAnnotationType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "javax.validation.Validator"
        ]
      },
      {
        "name": "setValidatorFactory",
        "parameterTypes": [
          "javax.validation.ValidatorFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "forExecutables",
        "parameterTypes": []
      },
      {
        "name": "getConstraintsForClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "supports",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateProperty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "java.lang.Class[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "org.springframework.validation.Errors",
          "java.lang.Object[]"
        ]
      },
      {
        "name": "validateValue",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Class[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.client.RestTemplate"
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "reactor.adapter.JdkFlowAdapter",
    "methods": [
      {
        "name": "flowPublisherToFlux",
        "parameterTypes": [
          "java.util.concurrent.Flow$Publisher"
        ]
      },
      {
        "name": "publisherToFlowPublisher",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "reactor.core.CorePublisher",
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.Disposable",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "reactor.core.Fuseable",
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.Scannable",
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.Flux",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.FluxMapFuseable",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "reactor.core.publisher.FluxOperator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.InternalFluxOperator",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.core.publisher.OptimizableOperator",
    "allDeclaredMethods": true
  },
  {
    "name": "reactor.netty.channel.ChannelOperationsHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.HttpResources",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "disposeLoopsAndConnections",
        "parameterTypes": []
      },
      {
        "name": "disposeLoopsAndConnectionsLater",
        "parameterTypes": []
      },
      {
        "name": "disposeLoopsAndConnectionsLater",
        "parameterTypes": [
          "java.time.Duration",
          "java.time.Duration"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "reset",
        "parameterTypes": []
      },
      {
        "name": "set",
        "parameterTypes": [
          "reactor.netty.resources.ConnectionProvider"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "reactor.netty.resources.LoopResources"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.client.Http2StreamBridgeClientHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.client.HttpClientConfig$H2Codec"
  },
  {
    "name": "reactor.netty.http.client.HttpClientConfig$H2OrHttp11Codec",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.client.HttpTrafficHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.server.HttpTrafficHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.server.HttpTrafficHandler$IdleTimeoutHandler"
  },
  {
    "name": "reactor.netty.http.server.SimpleCompressionHandler",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.resources.ConnectionProvider",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
  },
  {
    "name": "reactor.netty.resources.LoopResources",
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "reactor.netty.tcp.SslProvider$SslReadHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.tcp.TcpResources",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "acquire",
        "parameterTypes": [
          "reactor.netty.transport.TransportConfig",
          "reactor.netty.ConnectionObserver",
          "java.util.function.Supplier",
          "io.netty.resolver.AddressResolverGroup"
        ]
      },
      {
        "name": "daemon",
        "parameterTypes": []
      },
      {
        "name": "dispose",
        "parameterTypes": []
      },
      {
        "name": "disposeLater",
        "parameterTypes": []
      },
      {
        "name": "disposeLater",
        "parameterTypes": [
          "java.time.Duration",
          "java.time.Duration"
        ]
      },
      {
        "name": "disposeWhen",
        "parameterTypes": [
          "java.net.SocketAddress"
        ]
      },
      {
        "name": "isDisposed",
        "parameterTypes": []
      },
      {
        "name": "maxConnections",
        "parameterTypes": []
      },
      {
        "name": "maxConnectionsPerHost",
        "parameterTypes": []
      },
      {
        "name": "onChannel",
        "parameterTypes": [
          "java.lang.Class",
          "io.netty.channel.EventLoopGroup"
        ]
      },
      {
        "name": "onChannelClass",
        "parameterTypes": [
          "java.lang.Class",
          "io.netty.channel.EventLoopGroup"
        ]
      },
      {
        "name": "onClient",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "onServer",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "onServerSelect",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
  },
  {
    "name": "reactor.util.annotation.Nullable",
    "allDeclaredMethods": true
  },
  {
    "name": "short",
    "allDeclaredMethods": true
  },
  {
    "name": "short[]"
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      }
    ]
  },
  {
    "name": "sun.security.pkcs.SignerInfo[]"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl",
    "fields": [
      {
        "name": "trustManager",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
