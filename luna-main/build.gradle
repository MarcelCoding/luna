plugins {
  id 'org.springframework.boot'
  id 'com.google.cloud.tools.jib'
}

dependencies {
  implementation "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}"

  implementation project(':luna-cacti')

  implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
  runtimeOnly 'org.postgresql:postgresql'
  // runtimeOnly 'org.liquibase:liquibase-core'

  developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
  // testImplementation 'org.springframework.boot:spring-boot-starter-test'
  // testImplementation 'io.projectreactor:reactor-test'
}

jib {
  from {
    // https://github.com/GoogleContainerTools/distroless/pull/670
    image = 'adoptopenjdk:15-jre-openj9'
//    platforms {
//      platform {
//        architecture = 'amd64'
//        os = 'linux'
//      }
//    }
  }
  to {
    image = "marcelcoding/luna"
    tags = generateTags()
  }
}

def generateTags() {
  def version = version.toString();

  if (version == 'edge') {
    return ['edge']
  }

  def (major, minor, _) = version.tokenize('.')
  return ['latest', major, "${major}.${minor}", version]
}
