name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:

env:
  IMAGE_NAME: marcelcoding/luna

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Lint with Gradle
        run: ./gradlew checkstyleMain checkstyleTest spotbugsMain spotbugsTest pmdMain pmdTest --stacktrace --no-daemon

      - name: Annotate Checkstyle Issues
        uses: jwgmeligmeyling/checkstyle-github-action@master
        with:
          path: '**/build/reports/checkstyle/*.xml'

      - name: Annotate SpotBugs Issues
        uses: jwgmeligmeyling/spotbugs-github-action@master
        with:
          path: '**/build/reports/spotbugs/*.xml'

      - name: Annotate PMD Issues
        uses: jwgmeligmeyling/pmd-github-action@master
        with:
          path: '**/build/reports/pmd/*.xml'

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests with Gradle
        run: ./gradlew test --stacktrace --no-daemon

  build:
    needs: [ lint, test ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew :luna-main:assemble --stacktrace --no-daemon

  docker:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}

    strategy:
      matrix:
        jvm-impl: [ hotspot, openj9 ]
        # registry: [ 'dhub', 'ghrc' ]

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build & Publish with Gradle
        id: publish
        run: |
          ./gradlew :luna-main:jib \
            --stacktrace \
            --no-daemon \
            -Djib.console=plain \
            -PjvmImpl=${{ matrix.jvm-impl }} \
            -Pimage=${{ env.IMAGE_NAME }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} # github.repository_owner
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }} # secrets.GH_PAT_PACKAGES

      - name: Check manifest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.publish.outputs.tag }}
        # docker buildx imagetools inspect ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.publish.outputs.tag }}
